(qualif EqZero ((a0 int)) (a0 = 0))
(qualif GtZero ((a0 int)) (a0 > 0))
(qualif GeZero ((a0 int)) (a0 >= 0))
(qualif LtZero ((a0 int)) (a0 < 0))
(qualif LeZero ((a0 int)) (a0 <= 0))
(qualif Eq ((a0 int) (a1 int)) (a0 = a1))
(qualif Gt ((a0 int) (a1 int)) (a0 > a1))
(qualif Ge ((a0 int) (a1 int)) (a0 >= a1))
(qualif Lt ((a0 int) (a1 int)) (a0 < a1))
(qualif Le ((a0 int) (a1 int)) (a0 <= a1))
(qualif Le1 ((a0 int) (a1 int)) (a0 <= (a1 - 1)))
(qualif Add2 ((a0 int) (a1 int) (a2 int)) (a0 = (a1 + a2)))
(qualif Sub2 ((a0 int) (a1 int) (a2 int)) (a0 = (a1 - a2)))
(qualif MyQ1 ((a4 int) (a5 int) (a6 int)) ((a4 + a5) <= (a6 + a3)))
(data Pair 2 = [| Pair { fst: @(0), snd: @(1) } ])
(data Unit 0 = [| Unit { }])
(constant a3 int)(constant a2 int)(constant a1 int)(constant a0 int)(var $k0 ((int) (int) (int) (int)))
(var $k1 ((bool) (int) (int) (int)))
(var $k2 ((int) (int) (int) (int) (bool)))
(var $k3 ((int) (int) (int) (int) (bool)))
(var $k4 ((int) (int) (int) (int) (bool) (int)))
(var $k5 ((int) (int) (int) (int) (bool)))

(constraint
  (forall ((_ Unit) (a0 = 1048576))
    (forall ((_ Unit) (a1 = -2147483648))
      (forall ((_ Unit) (a2 = 4096))
        (forall ((_ Unit) (a3 = 4294965096))
          (forall ((a4 int) (true))
            (forall ((_ Unit) (a4 >= 0))
              (forall ((a5 int) (true))
                (forall ((a6 int) (true))
                  (forall ((_ Unit) (a6 >= 0))
                    (and
                      (forall ((a7 int) (true))
                        (tag ($k0 a7 a4 a5 a6) "0")
                      )
                      (forall ((_ Unit) (~(a5 < a6)))
                        (forall ((a8 int) (true))
                          (and
                            (forall ((a9 bool) (a9 = ~((((0 <= a4) && (0 <= a6)) && (a4 <= (a4 + a6))) && ((a4 + a6) < a3))))
                              (tag ($k1 a9 a4 a5 a6) "1")
                            )
                            (forall ((a10 int) (true))
                              (forall ((a11 bool) (a11 = ~((((0 <= a4) && (0 <= a6)) && (a4 <= (a4 + a6))) && ((a4 + a6) < a3))))
                                (tag ($k2 a10 a4 a5 a6 a11) "1")
                              )
                            )
                            (forall ((a14 int) (true))
                              (forall ((a15 bool) (a15 = ~((((0 <= a4) && (0 <= a6)) && (a4 <= (a4 + a6))) && ((a4 + a6) < a3))))
                                (tag ($k3 a14 a4 a5 a6 a15) "1")
                              )
                            )
                          )
                        )
                      )
                      (forall ((_ Unit) (~(~(a5 < a6))))
                        (and
                          (forall ((a16 bool) (a16 = true))
                            (tag ($k1 a16 a4 a5 a6) "1")
                          )
                          (forall ((a17 int) (true))
                            (forall ((a18 bool) (a18 = true))
                              (tag ($k2 a17 a4 a5 a6 a18) "1")
                            )
                          )
                          (forall ((a21 int) (true))
                            (forall ((a22 bool) (a22 = true))
                              (tag ($k3 a21 a4 a5 a6 a22) "1")
                            )
                          )
                        )
                      )
                      (forall ((a23 bool) (true))
                        (forall ((_ Unit) ($k1 a23 a4 a5 a6))
                          (forall ((_ Unit) (~a23))
                            (forall ((a24 int) (true))
                              (forall ((_ Unit) ($k2 a24 a4 a5 a6 a23))
                                (and
                                  (and
                                    (tag ((a4 + a6) < a3) "2")
                                    (tag (a6 <= a5) "2")
                                  )
                                  (forall ((a26 int) (a26 = 0))
                                    (tag ($k4 a26 a4 a5 a6 a23 a24) "3")
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
