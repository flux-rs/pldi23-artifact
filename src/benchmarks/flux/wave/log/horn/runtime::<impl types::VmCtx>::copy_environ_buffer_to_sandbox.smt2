(qualif EqZero ((a0 int)) (a0 = 0))
(qualif GtZero ((a0 int)) (a0 > 0))
(qualif GeZero ((a0 int)) (a0 >= 0))
(qualif LtZero ((a0 int)) (a0 < 0))
(qualif LeZero ((a0 int)) (a0 <= 0))
(qualif Eq ((a0 int) (a1 int)) (a0 = a1))
(qualif Gt ((a0 int) (a1 int)) (a0 > a1))
(qualif Ge ((a0 int) (a1 int)) (a0 >= a1))
(qualif Lt ((a0 int) (a1 int)) (a0 < a1))
(qualif Le ((a0 int) (a1 int)) (a0 <= a1))
(qualif Le1 ((a0 int) (a1 int)) (a0 <= (a1 - 1)))
(qualif Add2 ((a0 int) (a1 int) (a2 int)) (a0 = (a1 + a2)))
(qualif Sub2 ((a0 int) (a1 int) (a2 int)) (a0 = (a1 - a2)))
(qualif MyQ1 ((a4 int) (a5 int) (a6 int)) ((a4 + a5) <= (a6 + a3)))
(data Pair 2 = [| Pair { fst: @(0), snd: @(1) } ])
(data Unit 0 = [| Unit { }])
(constant a3 int)(constant a2 int)(constant a1 int)(constant a0 int)(var $k0 ((int) (int) (int) (int) (int)))
(var $k1 ((int) (int) (int) (int) (int)))
(var $k2 ((bool) (int) (int) (int) (int)))
(var $k3 ((int) (int) (int) (int) (int) (bool)))
(var $k4 ((int) (int) (int) (int) (int) (bool)))
(var $k5 ((int) (int) (int) (int) (int) (bool)))

(constraint
  (forall ((_ Unit) (a0 = 1048576))
    (forall ((_ Unit) (a1 = -2147483648))
      (forall ((_ Unit) (a2 = 4096))
        (forall ((_ Unit) (a3 = 4294965096))
          (forall ((a4 int) (true))
            (forall ((a5 int) (true))
              (forall ((a6 int) (true))
                (forall ((_ Unit) (a5 >= 0))
                  (forall ((_ Unit) (a6 >= 0))
                    (forall ((a7 int) (true))
                      (and
                        (forall ((a8 int) (true))
                          (tag ($k0 a8 a4 a5 a6 a7) "0")
                        )
                        (forall ((a9 int) (true))
                          (forall ((_ Unit) ($k0 a9 a4 a5 a6 a7))
                            (tag ($k1 a9 a4 a5 a6 a7) "1")
                          )
                        )
                        (forall ((_ Unit) (~(a7 /= a6)))
                          (and
                            (forall ((a10 bool) (a10 = ~((((0 <= a5) && (0 <= a6)) && (a5 <= (a5 + a6))) && ((a5 + a6) < a3))))
                              (tag ($k2 a10 a4 a5 a6 a7) "2")
                            )
                            (forall ((a11 int) (true))
                              (forall ((_ Unit) ($k0 a11 a4 a5 a6 a7))
                                (forall ((a12 bool) (a12 = ~((((0 <= a5) && (0 <= a6)) && (a5 <= (a5 + a6))) && ((a5 + a6) < a3))))
                                  (tag ($k3 a11 a4 a5 a6 a7 a12) "2")
                                )
                              )
                            )
                          )
                        )
                        (forall ((_ Unit) (~(~(a7 /= a6))))
                          (and
                            (forall ((a13 bool) (a13 = true))
                              (tag ($k2 a13 a4 a5 a6 a7) "2")
                            )
                            (forall ((a14 int) (true))
                              (forall ((_ Unit) ($k0 a14 a4 a5 a6 a7))
                                (forall ((a15 bool) (a15 = true))
                                  (tag ($k3 a14 a4 a5 a6 a7 a15) "2")
                                )
                              )
                            )
                          )
                        )
                        (forall ((a16 bool) (true))
                          (forall ((_ Unit) ($k2 a16 a4 a5 a6 a7))
                            (forall ((_ Unit) (~a16))
                              (and
                                (and
                                  (tag ((a5 + a6) < a3) "3")
                                  (tag (a6 <= a7) "3")
                                )
                                (forall ((a18 int) (a18 = 0))
                                  (tag ($k4 a18 a4 a5 a6 a7 a16) "4")
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)
