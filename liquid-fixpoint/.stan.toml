# Partial: base/head
[[check]]
  id = "STAN-0001"
  scope = "all"
  type = "Exclude"

# Partial: base/tail
[[check]]
  id = "STAN-0002"
  scope = "all"
  type = "Exclude"

# Partial: base/init
[[check]]
  id = "STAN-0003"
  scope = "all"
  type = "Exclude"

# Usage of partial function 'last' for lists
[[check]]
  id = "STAN-0004"
  scope = "all"
  type = "Exclude"

# Partial: base/!!
[[check]]
  id = "STAN-0005"
  scope = "all"
  type = "Exclude"

# Partial: base/fromJust
[[check]]
  id = "STAN-0008"
  scope = "all"
  type = "Exclude"

# Partial: base/read
[[check]]
  id = "STAN-0009"
  scope = "all"
  type = "Exclude"

# Partial: base/toEnum
[[check]]
  id = "STAN-0012"
  scope = "all"
  type = "Exclude"

# Partial: base/maximum
[[check]]
  id = "STAN-0013"
  scope = "all"
  type = "Exclude"

# Partial: base/minimum
[[check]]
  id = "STAN-0014"
  scope = "all"
  type = "Exclude"

# Partial: base/foldr1
[[check]]
  id = "STAN-0019"
  scope = "all"
  type = "Exclude"

# Infinite: base/reverse
[[check]]
  id = "STAN-0101"
  scope = "all"
  type = "Exclude"

# Infinite: base/isSuffixOf
[[check]]
  id = "STAN-0102"
  scope = "all"
  type = "Exclude"

# Infinite: base/length
[[check]]
  id = "STAN-0103"
  scope = "all"
  type = "Exclude"

# Infinite: base/sum
[[check]]
  id = "STAN-0105"
  scope = "all"
  type = "Exclude"

# Data types with non-strict fields
[[check]]
  id = "STAN-0206"
  scope = "all"
  type = "Exclude"

# Anti-pattern: Slow 'length' for Text
[[check]]
  id = "STAN-0208"
  scope = "all"
  type = "Exclude"

# Anti-pattern: Slow 'nub' for lists
[[check]]
  id = "STAN-0209"
  scope = "all"
  type = "Exclude"

# Anti-pattern: unsafe functions
[[check]]
  id = "STAN-0212"
  scope = "all"
  type = "Exclude"

# Anti-pattern: Pattern matching on '_'
[[check]]
  id = "STAN-0213"
  scope = "all"
  type = "Exclude"

# Using tuples of big size (>= 4) can decrease code readability
[[check]]
  id = "STAN-0302"
  scope = "all"
  type = "Exclude"
